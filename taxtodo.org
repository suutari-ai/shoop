#+TITLE: Tax system: Fix, polish, document (SHOOP-975)

* TODOs [3/20]

** DONE Improve PriceInfo: quantity, docs, tests
** DONE Currency support to Money (with tests)
** STARTED Improve docstrings of Price, Money
** TODO Unit tests for bankers_round(Price)
** DONE Implement CurrencyField
** STARTED Add Money/Price properties to models
  - [-] Create MoneyProperty and PriceProperty classes
     - [X] Implement MoneyProperty and PriceProperty
     - [X] Unit tests for MoneyProperty and PriceProperty
     - [-] Docs for MoneyProperty and PriceProperty
   - [ ] Rename MoneyField to MoneyValueField
   - [ ] Check all MoneyField usages and add MoneyProperty or PriceProperty
   - [ ] Check all "amount" usages
   - [ ] Fix callers of model init and objects.create
   - [ ] Fix users of amount/price fields
     - [ ] Order.cache_prices
     - [ ] OrderCreator.add_line_taxes
     - [ ] OrderLine.total_tax_amount
     - [ ] Method.module_data
** STARTED Check usages of module_data of Methods for prices
** STARTED Check when taxes are determined and amend that
** STARTED OrderSource tuning
   - [-] Docstrings
   - [-] Make calculate_taxes explicit
   - [-] Implement auto-calculate taxes
     - [X] Add flag to OrderSource and use it
     - [ ] Add getter to TaxModule?
   - [-] Get rid of OrderSource.uncache
     - [-] Check all callers of uncache
     - [-] Implement automatic uncaching
       - [-] Refactor OrderSource.lines to OrderSource.add_line
       - [ ] What else is needed?
   - [ ] Improve price de/serialization
   - [ ] Check test coverage
   - [ ] Add and improve tests
** STARTED Check type specifiers in docstring for Price/Money params and rtypes
** TODO Make tax Admin views work again (and test them through)
** TODO Make sure that basket with differing currency/taxness cannot be loaded
** STARTED Make sure that all prices are created with Shop.create_price
** STARTED Check SHOOP_HOME_CURRENCY usages and replace with Shop.currency
** STARTED Jinja filters for Price & Money
   - [-] Implement the filters
   - [ ] Use the new filters (instead of home_currency)
** STARTED Write general tax system documentation
** TODO Test order creating from basket (from UI)
** TODO Test order processing in Admin (from UI)
** TODO Test shipping with and without ShippingMethod price (from UI)
** TODO Test payment creating (with and without paymentmethod price) (from UI)


* Notes

** When are taxes determined

 1. In basket confirm:
    - ConfirmPhase.get_context_data
    - BaseBasket.get_validation_errors
    - OrderSource.get_final_lines
    - OrderSource._compute_processed_lines
    - OrderSource._compute_taxes

 2. Saving basket to database
    - DatabaseBasketStorage.save
    - OrderSource.taxless_total_price / OrderSource.taxful_total_price
    - OrderSource.get_final_lines
    - OrderSource._compute_processed_lines

    - OrderSource._compute_taxes
